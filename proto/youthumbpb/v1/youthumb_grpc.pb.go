// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.2
// source: youthumb/v1/youthumb.proto

package youthumbpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	ThumbnailService_GetThumbnail_FullMethodName = "/youthumb.v1.ThumbnailService/GetThumbnail"
)

// ThumbnailServiceClient is the client API for ThumbnailService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ThumbnailServiceClient interface {
	GetThumbnail(ctx context.Context, in *GetThumbnailRequest, opts ...grpc.CallOption) (ThumbnailService_GetThumbnailClient, error)
}

type thumbnailServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewThumbnailServiceClient(cc grpc.ClientConnInterface) ThumbnailServiceClient {
	return &thumbnailServiceClient{cc}
}

func (c *thumbnailServiceClient) GetThumbnail(ctx context.Context, in *GetThumbnailRequest, opts ...grpc.CallOption) (ThumbnailService_GetThumbnailClient, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &ThumbnailService_ServiceDesc.Streams[0], ThumbnailService_GetThumbnail_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &thumbnailServiceGetThumbnailClient{ClientStream: stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ThumbnailService_GetThumbnailClient interface {
	Recv() (*ThumbnailChunk, error)
	grpc.ClientStream
}

type thumbnailServiceGetThumbnailClient struct {
	grpc.ClientStream
}

func (x *thumbnailServiceGetThumbnailClient) Recv() (*ThumbnailChunk, error) {
	m := new(ThumbnailChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ThumbnailServiceServer is the server API for ThumbnailService service.
// All implementations must embed UnimplementedThumbnailServiceServer
// for forward compatibility
type ThumbnailServiceServer interface {
	GetThumbnail(*GetThumbnailRequest, ThumbnailService_GetThumbnailServer) error
	mustEmbedUnimplementedThumbnailServiceServer()
}

// UnimplementedThumbnailServiceServer must be embedded to have forward compatible implementations.
type UnimplementedThumbnailServiceServer struct {
}

func (UnimplementedThumbnailServiceServer) GetThumbnail(*GetThumbnailRequest, ThumbnailService_GetThumbnailServer) error {
	return status.Errorf(codes.Unimplemented, "method GetThumbnail not implemented")
}
func (UnimplementedThumbnailServiceServer) mustEmbedUnimplementedThumbnailServiceServer() {}

// UnsafeThumbnailServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ThumbnailServiceServer will
// result in compilation errors.
type UnsafeThumbnailServiceServer interface {
	mustEmbedUnimplementedThumbnailServiceServer()
}

func RegisterThumbnailServiceServer(s grpc.ServiceRegistrar, srv ThumbnailServiceServer) {
	s.RegisterService(&ThumbnailService_ServiceDesc, srv)
}

func _ThumbnailService_GetThumbnail_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetThumbnailRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ThumbnailServiceServer).GetThumbnail(m, &thumbnailServiceGetThumbnailServer{ServerStream: stream})
}

type ThumbnailService_GetThumbnailServer interface {
	Send(*ThumbnailChunk) error
	grpc.ServerStream
}

type thumbnailServiceGetThumbnailServer struct {
	grpc.ServerStream
}

func (x *thumbnailServiceGetThumbnailServer) Send(m *ThumbnailChunk) error {
	return x.ServerStream.SendMsg(m)
}

// ThumbnailService_ServiceDesc is the grpc.ServiceDesc for ThumbnailService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ThumbnailService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "youthumb.v1.ThumbnailService",
	HandlerType: (*ThumbnailServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetThumbnail",
			Handler:       _ThumbnailService_GetThumbnail_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "youthumb/v1/youthumb.proto",
}
